<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oj.judge.dao.RegisterMapper" >
  <resultMap id="BaseResultMap" type="com.oj.judge.entity.Register" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="comp_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="solution_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="submit_count" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="score" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, comp_id, solution_count, submit_count, score, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from register
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from register
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.oj.judge.entity.Register" >
    insert into register (id, user_id, comp_id, 
      solution_count, submit_count, score, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, 
      #{solutionCount,jdbcType=INTEGER}, #{submitCount,jdbcType=INTEGER}, #{score,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.oj.judge.entity.Register" >
    insert into register
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="compId != null" >
        comp_id,
      </if>
      <if test="solutionCount != null" >
        solution_count,
      </if>
      <if test="submitCount != null" >
        submit_count,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="solutionCount != null" >
        #{solutionCount,jdbcType=INTEGER},
      </if>
      <if test="submitCount != null" >
        #{submitCount,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.oj.judge.entity.Register" >
    update register
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="compId != null" >
        comp_id = #{compId,jdbcType=INTEGER},
      </if>
      <if test="solutionCount != null" >
        solution_count = #{solutionCount,jdbcType=INTEGER},
      </if>
      <if test="submitCount != null" >
        submit_count = #{submitCount,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oj.judge.entity.Register" >
    update register
    set user_id = #{userId,jdbcType=INTEGER},
      comp_id = #{compId,jdbcType=INTEGER},
      solution_count = #{solutionCount,jdbcType=INTEGER},
      submit_count = #{submitCount,jdbcType=INTEGER},
      score = #{score,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="addSolutionCountByProblemIdCompIdUserId" parameterType="map">
    update register set solution_count = solution_count + 1
    where comp_id = #{compId}
    and user_id = #{userId}
    and (select count(id) from problem_result pr
    where pr.comp_id = #{compId}
    and pr.problem_id = #{problemId}
    and pr.status = 1 and pr.user_id = #{userId}) = 0
    </update>

  <update id="addSubmitCountByCompIdUserId" parameterType="map">
    update register set submit_count = submit_count + 1
    where comp_id = #{compId}
    and user_id = #{userId}
    </update>
  <update id="updateScoreByCompIdUserId" parameterType="map">
    update register set score = #{score}
    where comp_id = #{compId}
    and user_id = #{userId}
  </update>


</mapper>